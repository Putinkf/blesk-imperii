// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∞–π—Ç–∞ "–ë–ª–µ—Å–∫ –ò–º–ø–µ—Ä–∏–∏"

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initPreloader();
    initThemeToggle();
    initSidebarMenu();
    initScrollTop();
    initScrollAnimations();
    initPostRatings();
    initTelegramData();
    initAlbumModal(); // –î–æ–±–∞–≤–ª–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∞–ª—å–±–æ–º–∞
});

// === –ü–†–ï–õ–û–ê–î–ï–† ===
function initPreloader() {
    window.addEventListener('load', function() {
        const preloader = document.getElementById('preloader');
        setTimeout(() => {
            preloader.classList.add('hidden');
            setTimeout(() => {
                if (preloader.parentNode) {
                    preloader.remove();
                }
            }, 500);
        }, 1500);
    });
}

// === –ü–ï–†–ï–ö–õ–Æ–ß–ê–¢–ï–õ–¨ –¢–ï–ú–´ ===
function initThemeToggle() {
    const themeToggle = document.getElementById('themeToggle');
    const themeIcon = document.getElementById('themeIcon');
    const html = document.documentElement;

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
    const savedTheme = localStorage.getItem('theme') || 'light';
    html.setAttribute('data-theme', savedTheme);
    themeIcon.textContent = savedTheme === 'light' ? 'üåô' : '‚òÄÔ∏è';

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    themeToggle.addEventListener('click', function() {
        const currentTheme = html.getAttribute('data-theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        
        html.setAttribute('data-theme', newTheme);
        themeIcon.textContent = newTheme === 'light' ? 'üåô' : '‚òÄÔ∏è';
        localStorage.setItem('theme', newTheme);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        themeToggle.style.transform = 'rotate(360deg)';
        setTimeout(() => {
            themeToggle.style.transform = '';
        }, 300);
    });
}

// === –ë–û–ö–û–í–û–ï –ú–ï–ù–Æ ===
function initSidebarMenu() {
    const menuToggle = document.getElementById('menuToggle');
    const sidebarMenu = document.getElementById('sidebarMenu');

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–Ω—é
    menuToggle.addEventListener('click', function() {
        sidebarMenu.classList.toggle('open');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    document.addEventListener('click', function(e) {
        if (!sidebarMenu.contains(e.target) && !menuToggle.contains(e.target)) {
            sidebarMenu.classList.remove('open');
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É (–¥–ª—è –ø–ª–∞–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏)
    const navLinks = sidebarMenu.querySelectorAll('.sidebar-nav a');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            // –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –≤–µ–¥–µ—Ç –∫ —è–∫–æ—Ä—é –Ω–∞ —Ç–æ–π –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            if (this.getAttribute('href').startsWith('#')) {
                e.preventDefault();
                const targetId = this.getAttribute('href');
                const targetElement = document.querySelector(targetId);
                
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            }
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            sidebarMenu.classList.remove('open');
        });
    });
}

// === –ö–ù–û–ü–ö–ê "–ù–ê–í–ï–†–•" ===
function initScrollTop() {
    const scrollTop = document.getElementById('scrollTop');

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    window.addEventListener('scroll', function() {
        if (window.pageYOffset > 300) {
            scrollTop.classList.add('visible');
        } else {
            scrollTop.classList.remove('visible');
        }
    });

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –∫–ª–∏–∫–µ
    scrollTop.addEventListener('click', function() {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
}

// === –ê–ù–ò–ú–ê–¶–ò–ò –ü–†–ò –°–ö–†–û–õ–õ–ï ===
function initScrollAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
                if (entry.target.dataset.delay) {
                    entry.target.style.transitionDelay = entry.target.dataset.delay + 's';
                }
            }
        });
    }, observerOptions);

    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Å –∫–ª–∞—Å—Å–æ–º scroll-animate
    document.querySelectorAll('.scroll-animate').forEach((el, index) => {
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        el.dataset.delay = (index * 0.1).toString();
        observer.observe(el);
    });
}

// === –†–ï–ô–¢–ò–ù–ì–û–í–ê–Ø –°–ò–°–¢–ï–ú–ê –î–õ–Ø –ü–û–°–¢–û–í ===
function initPostRatings() {
    const userRatings = JSON.parse(localStorage.getItem('postRatings') || '{}');

    document.querySelectorAll('.rating-stars').forEach(ratingContainer => {
        const postId = ratingContainer.parentElement.parentElement.dataset.postId;
        const stars = ratingContainer.querySelectorAll('.rating-star');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥
        if (userRatings[postId]) {
            const rating = userRatings[postId];
            stars.forEach((star, index) => {
                if (index < rating) {
                    star.classList.add('active');
                }
            });
            
            const countElement = ratingContainer.parentElement.querySelector('.rating-count');
            if (countElement) {
                countElement.textContent = `(1 –æ—Ü–µ–Ω–∫–∞)`;
            }
            return; // –ï—Å–ª–∏ —É–∂–µ –æ—Ü–µ–Ω–µ–Ω–æ, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–µ–æ—Ü–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤
        stars.forEach((star, index) => {
            star.addEventListener('click', function() {
                if (userRatings[postId]) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ü–µ–Ω–∫—É
                
                const rating = index + 1;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                stars.forEach((s, i) => {
                    if (i < rating) {
                        s.classList.add('active');
                    } else {
                        s.classList.remove('active');
                    }
                });
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
                userRatings[postId] = rating;
                localStorage.setItem('postRatings', JSON.stringify(userRatings));
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ü–µ–Ω–æ–∫
                const countElement = ratingContainer.parentElement.querySelector('.rating-count');
                if (countElement) {
                    countElement.textContent = `(1 –æ—Ü–µ–Ω–∫–∞)`;
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(`–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! –í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ ${rating} ${rating === 1 ? '–∑–≤–µ–∑–¥—É' : rating <= 4 ? '–∑–≤–µ–∑–¥—ã' : '–∑–≤–µ–∑–¥'}`);
            });
            
            // Hover —ç—Ñ—Ñ–µ–∫—Ç
            star.addEventListener('mouseenter', function() {
                if (userRatings[postId]) return;
                
                const hoverRating = index + 1;
                stars.forEach((s, i) => {
                    if (i < hoverRating) {
                        s.style.color = '#ffd700';
                    } else {
                        s.style.color = 'var(--border-color)';
                    }
                });
            });
        });
        
        // –£–±–∏—Ä–∞–µ–º hover –ø—Ä–∏ —É—Ö–æ–¥–µ –º—ã—à–∏
        ratingContainer.addEventListener('mouseleave', function() {
            if (userRatings[postId]) return;
            
            stars.forEach((star) => {
                star.style.color = '';
            });
        });
    });
}

// === –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ê–õ–¨–ë–û–ú–ê ===
function initAlbumModal() {
    const openAlbumBtn = document.getElementById('openAlbum');
    const albumModal = document.getElementById('postsAlbum');
    const closeBtn = document.getElementById('albumClose');
    const overlay = albumModal.querySelector('.album-overlay');
    
    if (!openAlbumBtn || !albumModal) return;

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    openAlbumBtn.addEventListener('click', function(e) {
        e.preventDefault();
        albumModal.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–ª—å–±–æ–º–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
        if (!albumModal.dataset.initialized) {
            initAlbumContent();
            albumModal.dataset.initialized = 'true';
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeModal() {
        albumModal.classList.remove('active');
        document.body.style.overflow = '';
    }

    closeBtn.addEventListener('click', closeModal);
    overlay.addEventListener('click', closeModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && albumModal.classList.contains('active')) {
            closeModal();
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∞–ª—å–±–æ–º–∞
function initAlbumContent() {
    const albumContainer = document.getElementById('albumContainer');
    const searchInput = document.getElementById('albumSearch');
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–ª—å–±–æ–º–∞
    fetchAlbumData()
        .then(posts => {
            renderAlbumPosts(posts, albumContainer);
            setupAlbumSearch(posts, searchInput, albumContainer);
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∞–ª—å–±–æ–º–∞:', error);
            albumContainer.innerHTML = '<div class="album-error">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∑–∞–ø–∏—Å–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div>';
        });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–ª—å–±–æ–º–∞
function fetchAlbumData() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç fetch –∫ API –∏–ª–∏ —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
    return new Promise((resolve) => {
        // –ó–∞–≥–ª—É—à–∫–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        setTimeout(() => {
            resolve([
                {
                    id: 'album-1',
                    title: '–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–æ–≤–æ–ª–æ—Å–∞—è –¥–∏–Ω–∞—Å—Ç–∏—è –ï–≤—Ä–æ–ø—ã',
                    date: 'V-VIII –≤–µ–∫ –Ω.—ç.',
                    content: '–ú–µ—Ä–æ–≤–∏–Ω–≥–∏ - –ø–µ—Ä–≤–∞—è –¥–∏–Ω–∞—Å—Ç–∏—è —Ñ—Ä–∞–Ω–∫—Å–∫–∏—Ö –∫–æ—Ä–æ–ª–µ–π, –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–≤–æ–∏–º–∏ –¥–ª–∏–Ω–Ω—ã–º–∏ –≤–æ–ª–æ—Å–∞–º–∏ –∫–∞–∫ —Å–∏–º–≤–æ–ª–æ–º –≤–ª–∞—Å—Ç–∏.',
                    hashtags: ['#—Ñ–∞–∫—Ç—ã', '#—Å—Ä–µ–¥–Ω–µ–≤–µ–∫–æ–≤—å–µ']
                },
                {
                    id: 'album-2',
                    title: '–î–µ–Ω—å, –∫–æ–≥–¥–∞ –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è —É–º–µ—Ä–ª–∞ –ø–æ–¥ –≥—É—Å–µ–Ω–∏—Ü–∞–º–∏',
                    date: '–û–∫—Ç—è–±—Ä—å 1993',
                    content: '–®—Ç—É—Ä–º –î–æ–º–∞ –°–æ–≤–µ—Ç–æ–≤ –≤ –ú–æ—Å–∫–≤–µ - –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —Ç—Ä–∞–≥–∏—á–µ—Å–∫–∏—Ö —ç–ø–∏–∑–æ–¥–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏.',
                    hashtags: ['#—Ñ–∞–∫—Ç—ã', '#—Ä–æ—Å—Å–∏—è']
                }
                // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø–æ—Å—Ç–æ–≤
            ]);
        }, 300);
    });
}

// –†–µ–Ω–¥–µ—Ä –ø–æ—Å—Ç–æ–≤ –≤ –∞–ª—å–±–æ–º–µ
function renderAlbumPosts(posts, container) {
    if (!posts || !posts.length) {
        container.innerHTML = '<div class="album-empty">–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
        return;
    }

    container.innerHTML = posts.map(post => `
        <div class="album-card" data-id="${post.id}">
            <div class="album-card-header">
                <h3 class="album-card-title">${post.title}</h3>
                <div class="album-card-date">${post.date}</div>
            </div>
            <div class="album-card-content">
                <p>${post.content}</p>
                <div class="album-card-tags">
                    ${post.hashtags.map(tag => `<span class="album-tag">${tag}</span>`).join('')}
                </div>
            </div>
            <button class="album-card-more">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
        </div>
    `).join('');

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
    container.querySelectorAll('.album-card-more').forEach(btn => {
        btn.addEventListener('click', function() {
            const card = this.closest('.album-card');
            const postId = card.dataset.id;
            showNotification(`–û—Ç–∫—Ä—ã—Ç –ø–æ—Å—Ç: ${card.querySelector('.album-card-title').textContent}`);
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
        });
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∞–ª—å–±–æ–º—É
function setupAlbumSearch(posts, searchInput, container) {
    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        
        if (!searchTerm) {
            renderAlbumPosts(posts, container);
            return;
        }
        
        const filteredPosts = posts.filter(post => 
            post.title.toLowerCase().includes(searchTerm) ||
            post.content.toLowerCase().includes(searchTerm) ||
            post.hashtags.some(tag => tag.toLowerCase().includes(searchTerm))
        );
        
        renderAlbumPosts(filteredPosts, container);
    });
}

// === –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• TELEGRAM ===
function initTelegramData() {
    updateTelegramData();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    setInterval(updateTelegramData, 1800000);
}

async function updateTelegramData() {
    try {
        const response = await fetch('./docs/telegram-data.json?v=' + Math.random());
        const data = await response.json();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        const subscriberElement = document.querySelector('#subscriber-count');
        if (subscriberElement && data.subscribers) {
            animateNumber(subscriberElement, data.subscribers);
        }
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ Telegram –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', data.updated);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö Telegram:', error);
        
        // Fallback –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
        const subscriberElement = document.querySelector('#subscriber-count');
        if (subscriberElement && subscriberElement.textContent === '900+') {
            subscriberElement.textContent = '950+';
        }
    }
}

// === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

// –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–∏—Å–ª–∞
function animateNumber(element, newValue) {
    const currentValue = element.textContent.replace(/[^\d]/g, '');
    const targetValue = newValue.replace(/[^\d]/g, '');
    
    if (currentValue !== targetValue) {
        element.style.transform = 'scale(1.1)';
        element.style.color = 'var(--accent-color)';
        
        setTimeout(() => {
            element.textContent = newValue;
            element.style.transform = '';
            element.style.color = '';
        }, 200);
    }
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'success', duration = 3000) {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    notification.style.cssText = `
        position: fixed;
        top: 80px;
        right: 20px;
        background: var(--accent-color);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 5px 15px var(--shadow-medium);
        z-index: 10000;
        opacity: 0;
        transform: translateX(100%);
        transition: all 0.3s ease;
        max-width: 300px;
        font-size: 0.9rem;
        font-weight: 600;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.opacity = '1';
        notification.style.transform = 'translateX(0)';
    }, 100);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 300);
    }, duration);
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (scrollToElement, isElementInViewport, debounce) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// ...