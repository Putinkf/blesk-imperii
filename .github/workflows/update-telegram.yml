name: Update Telegram Data
on:
  schedule:
    - cron: '0 */6 * * *'  # Каждые 6 часов
  workflow_dispatch:  # Ручной запуск

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout with clean state
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1
          clean: true
          
      - name: Force sync with remote
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions Bot"
          git fetch origin main
          git reset --hard origin/main
          
      - name: Install dependencies
        run: |
          curl -s "https://t.me/s/analinhistory" -o telegram.html
          
      - name: Extract and update Telegram data
        run: |
          # Извлекаем количество подписчиков
          SUBSCRIBERS=$(grep -oP '\d+(?:,\d+)*(?=\s*subscribers?)' telegram.html | head -1)
          
          # Fallback если не найдено
          if [ -z "$SUBSCRIBERS" ]; then
            SUBSCRIBERS="900+"
          fi
          
          # Создаем JSON с актуальными данными
          cat > docs/telegram-data.json << EOF
{
  "subscribers": "$SUBSCRIBERS",
  "updated": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "channel": "@analinhistory"
}
EOF
          
      - name: Commit and force push
        run: |
          # Проверяем изменения
          if git diff --quiet docs/telegram-data.json; then
            echo "📊 Данные не изменились, пропускаем обновление"
            exit 0
          fi
          
          # Принудительно отправляем изменения
          git add docs/telegram-data.json
          git commit -m "📊 Обновление подписчиков: $SUBSCRIBERS ($(date '+%d.%m.%Y %H:%M'))"
          git push origin main --force-with-lease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
